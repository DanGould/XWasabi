@using Microsoft.JSInterop
@using System.Text.Json.Serialization
@inherits BaseIonicInputComponent<string, IonInput<string>.InputChangeEventDetail>

<IonInput type="@Type" autocomplete="@Autocomplete" @bind-Value="Value" @attributes="InputAttributes" 
          EditContext="EditContext" 
          ValidationField="ValidationField" 
          ValidationFieldIdentifier="ValidationFieldIdentifier">@ChildContent</IonInput>
@if (ShowPassword)
{
    <IonIcon color="primary" slot="end" name="eye" class="eye" size="small" @onclick="TogglePassword"/>
}
else
{
    <IonIcon color="primary" slot="end" name="eye-off" class="eye-off" size="small" @onclick="TogglePassword"/>
}

@code {

    [Parameter]
    public bool IsNew { get; set; }

    private string Autocomplete => IsNew ? "new-password" : "current-password";

    [Parameter]
    public bool ShowPassword
    {
        get => _showPassword;
        set
        {
            if (value == _showPassword) return;
            _showPassword = value;
            ShowPasswordChanged.InvokeAsync(_showPassword);
        }
    }

    [Parameter]
    public EventCallback<bool> ShowPasswordChanged { get; set; }

    private string Type => ShowPassword ? "text" : "password";

    private bool _showPassword = false;
    private string _value;

    private void TogglePassword(MouseEventArgs _)
    {
        ShowPassword = !ShowPassword;
    }

}
